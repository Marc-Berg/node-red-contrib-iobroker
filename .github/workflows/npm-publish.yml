name: Publish NPM Package and Create GitHub Release

on:
  push:
    branches:
      - main

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version_check.outputs.version_changed }}
      new_version: ${{ steps.version_check.outputs.new_version }}
      commit_message: ${{ steps.get_commit.outputs.commit_message }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get commit message
        id: get_commit
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s%n%n%b" | tr '\n' '\r')
          echo "commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: version_check
        run: |
          OLD_VERSION=$(git show HEAD~1:package.json | jq -r '.version')
          NEW_VERSION=$(jq -r '.version' package.json)
          echo "Old version: $OLD_VERSION"
          echo "New version: $NEW_VERSION"
          if [ "$OLD_VERSION" = "$NEW_VERSION" ]; then
            echo "version_changed=false" >> $GITHUB_OUTPUT
          else
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          fi

  publish-npm:
    needs: check-version
    if: ${{ needs.check-version.outputs.version_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    needs: [check-version, publish-npm]
    if: ${{ needs.check-version.outputs.version_changed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.new_version }}
          release_name: v${{ needs.check-version.outputs.new_version }}
          draft: false
          prerelease: false
          body: ${{ needs.check-version.outputs.commit_message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
