[
    {
        "id": "sendto-examples-tab",
        "type": "tab",
        "label": "ioBroker SendTo Examples",
        "disabled": false,
        "info": "Comprehensive examples demonstrating various sendTo operations with different ioBroker adapters including notifications, database operations, script execution, and media control."
    },
    {
        "id": "iobroker-config",
        "type": "iob-config",
        "name": "ioBroker Server",
        "iobhost": "localhost",
        "iobport": 8081,
        "user": "",
        "password": "",
        "usessl": false
    },
    {
        "id": "comment.title",
        "type": "comment",
        "z": "sendto-examples-tab",
        "name": "ioBroker SendTo Command Examples",
        "info": "This flow demonstrates various sendTo patterns:\n\n**Notification Services:**\n- Telegram messages with user targeting\n- Email alerts with attachments\n- Pushover notifications with priority levels\n\n**Database Operations:**\n- SQL queries with response handling\n- History data retrieval\n- InfluxDB time-series queries\n\n**Script Execution:**\n- JavaScript adapter integration\n- Custom script execution with parameters\n- Data processing and transformation\n\n**Media Control:**\n- Spotify playlist control\n- Volume and device management\n- Dynamic content selection\n\n**System Operations:**\n- History queries for monitoring\n- Simple API state operations\n- Live system status checks\n\n**Response Modes:**\n- Fire-and-forget for simple notifications\n- Response mode for data queries\n- Error handling and timeouts\n\n**Dynamic Configuration:**\n- Adapter selection via message properties\n- Command parameter injection\n- Conditional message routing\n\nNote: Only adapters with sendTo API support are included. Adapters like backitup do not support sendTo commands.",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "telegram.notification",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "Telegram Alert",
        "adapter": "telegram.0",
        "command": "send",
        "message": "",
        "waitForResponse": false,
        "responseTimeout": 8000,
        "server": "iobroker-config",
        "x": 300,
        "y": 120,
        "wires": []
    },
    {
        "id": "email.alert",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "Email Alert",
        "adapter": "email.0",
        "command": "",
        "message": "",
        "waitForResponse": false,
        "responseTimeout": 10000,
        "server": "iobroker-config",
        "x": 300,
        "y": 180,
        "wires": []
    },
    {
        "id": "pushover.notification",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "Pushover Alert",
        "adapter": "pushover.0",
        "command": "",
        "message": "",
        "waitForResponse": false,
        "responseTimeout": 8000,
        "server": "iobroker-config",
        "x": 300,
        "y": 240,
        "wires": []
    },
    {
        "id": "sql.query",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "SQL Database Query",
        "adapter": "sql.0",
        "command": "query",
        "message": "",
        "waitForResponse": true,
        "responseTimeout": 15000,
        "server": "iobroker-config",
        "x": 300,
        "y": 320,
        "wires": [["query.result"]]
    },
    {
        "id": "history.query",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "History Data Query",
        "adapter": "history.0",
        "command": "getHistory",
        "message": "",
        "waitForResponse": true,
        "responseTimeout": 15000,
        "server": "iobroker-config",
        "x": 300,
        "y": 380,
        "wires": [["history.result"]]
    },
    {
        "id": "javascript.execution",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "Execute JavaScript",
        "adapter": "javascript.0",
        "command": "toScript",
        "message": "",
        "waitForResponse": true,
        "responseTimeout": 12000,
        "server": "iobroker-config",
        "x": 300,
        "y": 440,
        "wires": [["script.result"]]
    },
    {
        "id": "spotify.control",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "Spotify Control",
        "adapter": "spotify-premium.0",
        "command": "play",
        "message": "",
        "waitForResponse": true,
        "responseTimeout": 8000,
        "server": "iobroker-config",
        "x": 300,
        "y": 500,
        "wires": [["spotify.result"]]
    },
    {
        "id": "influx.query",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "InfluxDB Query",
        "adapter": "influxdb.0",
        "command": "query",
        "message": "",
        "waitForResponse": true,
        "responseTimeout": 10000,
        "server": "iobroker-config",
        "x": 300,
        "y": 560,
        "wires": [["influx.result"]]
    },
    {
        "id": "inject.telegram",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Motion Alert",
        "props": [
            {
                "p": "payload",
                "v": "{\"text\":\"üö® Motion detected in Living Room!\\nüìÖ Time: {{timestamp}}\\nüè† Location: Front Door\",\"user\":\"admin\",\"parse_mode\":\"HTML\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 120,
        "wires": [["telegram.notification"]]
    },
    {
        "id": "inject.email",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "System Alert",
        "props": [
            {
                "p": "payload",
                "v": "{\"to\":\"admin@smarthome.local\",\"subject\":\"üî• Critical Temperature Alert\",\"text\":\"Temperature in server room has reached critical level:\\n\\nCurrent: 85¬∞C\\nThreshold: 80¬∞C\\nTime: {{timestamp}}\\n\\nImmediate action required!\",\"html\":\"<h2>üî• Critical Temperature Alert</h2><p><strong>Current:</strong> 85¬∞C</p><p><strong>Threshold:</strong> 80¬∞C</p><p><strong>Time:</strong> {{timestamp}}</p><p style='color:red;'><strong>Immediate action required!</strong></p>\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 180,
        "wires": [["email.alert"]]
    },
    {
        "id": "inject.pushover",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Doorbell Alert",
        "props": [
            {
                "p": "payload",
                "v": "{\"message\":\"üîî Doorbell pressed at front entrance\",\"title\":\"Smart Home Alert\",\"priority\":1,\"sound\":\"pushover\",\"url\":\"http://192.168.1.100:8080/cam1\",\"url_title\":\"View Camera\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 240,
        "wires": [["pushover.notification"]]
    },
    {
        "id": "inject.sql",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Energy Report",
        "props": [
            {
                "p": "payload",
                "v": "SELECT DATE(ts) as date, ROUND(AVG(val), 2) as avg_consumption, ROUND(MAX(val), 2) as peak_consumption FROM ts_number WHERE id = 'energy.total.consumption' AND ts >= DATE_SUB(NOW(), INTERVAL 7 DAY) GROUP BY DATE(ts) ORDER BY date DESC",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 320,
        "wires": [["sql.query"]]
    },
    {
        "id": "inject.history",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Temperature History",
        "props": [
            {
                "p": "payload",
                "v": "{\"id\":\"hm-rpc.0.living.TEMPERATURE\",\"options\":{\"start\":{{timestamp-86400000}},\"end\":{{timestamp}},\"count\":100,\"aggregate\":\"average\"}}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 380,
        "wires": [["history.query"]]
    },
    {
        "id": "inject.script",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Data Processing",
        "props": [
            {
                "p": "payload",
                "v": "{\"script\":\"sensorDataProcessor\",\"message\":{\"action\":\"analyzeDaily\",\"sensors\":[\"temperature.living\",\"humidity.kitchen\",\"energy.total\"],\"timeframe\":\"24h\",\"outputFormat\":\"dashboard\"}}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 440,
        "wires": [["javascript.execution"]]
    },
    {
        "id": "inject.spotify",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Morning Routine",
        "props": [
            {
                "p": "payload",
                "v": "{\"device\":\"Living Room Speaker\",\"playlist\":\"Morning Motivation\",\"volume\":45,\"shuffle\":true,\"repeat\":\"playlist\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 500,
        "wires": [["spotify.control"]]
    },
    {
        "id": "inject.influx",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Energy Trend",
        "props": [
            {
                "p": "payload",
                "v": "SELECT mean(value) FROM energy WHERE time > now() - 7d GROUP BY time(1h) fill(null)",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 560,
        "wires": [["influx.query"]]
    },
    {
        "id": "query.result",
        "type": "debug",
        "z": "sendto-examples-tab",
        "name": "SQL Results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "history.result",
        "type": "debug",
        "z": "sendto-examples-tab",
        "name": "History Results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 380,
        "wires": []
    },
    {
        "id": "script.result",
        "type": "debug",
        "z": "sendto-examples-tab",
        "name": "Script Results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 440,
        "wires": []
    },
    {
        "id": "spotify.result",
        "type": "debug",
        "z": "sendto-examples-tab",
        "name": "Spotify Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 500,
        "wires": []
    },
    {
        "id": "influx.result",
        "type": "debug",
        "z": "sendto-examples-tab",
        "name": "InfluxDB Results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 560,
        "wires": []
    },
    {
        "id": "dynamic.example",
        "type": "iobsendto",
        "z": "sendto-examples-tab",
        "name": "Dynamic SendTo",
        "adapter": "",
        "command": "",
        "message": "",
        "waitForResponse": true,
        "responseTimeout": 10000,
        "server": "iobroker-config",
        "x": 300,
        "y": 640,
        "wires": [["dynamic.result"]]
    },
    {
        "id": "inject.dynamic",
        "type": "inject",
        "z": "sendto-examples-tab",
        "name": "Dynamic Config",
        "props": [
            {
                "p": "adapter",
                "v": "telegram.0",
                "vt": "str"
            },
            {
                "p": "command",
                "v": "send",
                "vt": "str"
            },
            {
                "p": "payload",
                "v": "{\"text\":\"Dynamic message sent via runtime configuration!\",\"user\":\"admin\"}",
                "vt": "json"
            },
            {
                "p": "timeout",
                "v": 5000,
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 640,
        "wires": [["dynamic.example"]]
    },
    {
        "id": "dynamic.result",
        "type": "debug",
        "z": "sendto-examples-tab",
        "name": "Dynamic Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 640,
        "wires": []
    }
]
