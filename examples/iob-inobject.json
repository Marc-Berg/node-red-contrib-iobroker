[
    {
        "id": "example-iob-inobject-flow",
        "type": "tab",
        "label": "ioBroker Object Subscription Examples",
        "disabled": false,
        "info": "Examples demonstrating ioBroker object subscription patterns for monitoring adapter installations, configuration changes, and system structure modifications."
    },
    {
        "id": "config.example",
        "type": "iob-config",
        "name": "Local ioBroker",
        "iobhost": "localhost",
        "iobport": 8084,
        "user": "",
        "password": "",
        "usessl": false
    },
    {
        "id": "adapter.monitor",
        "type": "iobinobject",
        "z": "example-iob-inobject-flow",
        "name": "Monitor All Adapters",
        "objectPattern": "system.adapter.*",
        "outputProperty": "payload",
        "useWildcard": true,
        "outputMode": "individual",
        "server": "config.example",
        "x": 150,
        "y": 100,
        "wires": [["adapter.debug"]]
    },
    {
        "id": "adapter.debug",
        "type": "debug",
        "z": "example-iob-inobject-flow",
        "name": "Adapter Changes",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 100,
        "wires": []
    },
    {
        "id": "instance.monitor",
        "type": "iobinobject",
        "z": "example-iob-inobject-flow",
        "name": "Monitor Admin Instances",
        "objectPattern": "system.adapter.admin.*",
        "outputProperty": "payload",
        "useWildcard": true,
        "outputMode": "individual",
        "server": "config.example",
        "x": 150,
        "y": 180,
        "wires": [["instance.processor"]]
    },
    {
        "id": "instance.processor",
        "type": "function",
        "z": "example-iob-inobject-flow",
        "name": "Process Instance Changes",
        "func": "// Extract relevant information from object changes\nconst objectId = msg.topic;\nconst objectData = msg.payload;\nconst operation = msg.operation || 'update';\n\n// Determine change type\nlet changeType = 'unknown';\nif (operation === 'delete') {\n    changeType = 'Instance Removed';\n} else if (objectData && objectData.common) {\n    if (objectData.common.enabled !== undefined) {\n        changeType = objectData.common.enabled ? 'Instance Enabled' : 'Instance Disabled';\n    } else {\n        changeType = 'Instance Updated';\n    }\n} else {\n    changeType = 'Instance Updated';\n}\n\n// Create processed message\nmsg.changeType = changeType;\nmsg.instanceId = objectId;\nmsg.timestamp = new Date().toISOString();\n\n// Add instance details if available\nif (objectData && objectData.common) {\n    msg.instanceInfo = {\n        name: objectData.common.name || objectId,\n        enabled: objectData.common.enabled || false,\n        host: objectData.common.host || 'unknown',\n        mode: objectData.common.mode || 'unknown'\n    };\n}\n\n// Create summary for easy reading\nmsg.summary = `${changeType}: ${objectId}`;\nif (msg.instanceInfo) {\n    msg.summary += ` (enabled: ${msg.instanceInfo.enabled})`;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [["instance.debug"]]
    },
    {
        "id": "instance.debug",
        "type": "debug",
        "z": "example-iob-inobject-flow",
        "name": "Instance Changes",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "summary",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "userdata.monitor",
        "type": "iobinobject",
        "z": "example-iob-inobject-flow",
        "name": "Monitor User Data Objects",
        "objectPattern": "0_userdata.0.*",
        "outputProperty": "payload",
        "useWildcard": true,
        "outputMode": "individual",
        "server": "config.example",
        "x": 150,
        "y": 260,
        "wires": [["userdata.filter"]]
    },
    {
        "id": "userdata.filter",
        "type": "switch",
        "z": "example-iob-inobject-flow",
        "name": "Filter State Objects",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "state",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 260,
        "wires": [["userdata.debug"]]
    },
    {
        "id": "userdata.debug",
        "type": "debug",
        "z": "example-iob-inobject-flow",
        "name": "User Data States",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 260,
        "wires": []
    },
    {
        "id": "system.monitor",
        "type": "iobinobject",
        "z": "example-iob-inobject-flow",
        "name": "Monitor System Configuration",
        "objectPattern": "system.config",
        "outputProperty": "payload",
        "useWildcard": false,
        "outputMode": "individual",
        "server": "config.example",
        "x": 150,
        "y": 340,
        "wires": [["system.notification"]]
    },
    {
        "id": "system.notification",
        "type": "function",
        "z": "example-iob-inobject-flow",
        "name": "System Config Changed",
        "func": "// Create notification for system configuration changes\nconst operation = msg.operation || 'update';\nconst timestamp = new Date().toLocaleString();\n\nswitch (operation) {\n    case 'update':\n        msg.notification = {\n            title: 'System Configuration Updated',\n            message: `ioBroker system configuration was modified at ${timestamp}`,\n            severity: 'info',\n            timestamp: timestamp\n        };\n        break;\n    case 'delete':\n        msg.notification = {\n            title: 'System Configuration Deleted',\n            message: `ioBroker system configuration was deleted at ${timestamp}`,\n            severity: 'warning',\n            timestamp: timestamp\n        };\n        break;\n    default:\n        msg.notification = {\n            title: 'System Configuration Changed',\n            message: `ioBroker system configuration change detected (${operation}) at ${timestamp}`,\n            severity: 'info',\n            timestamp: timestamp\n        };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [["system.debug"]]
    },
    {
        "id": "system.debug",
        "type": "debug",
        "z": "example-iob-inobject-flow",
        "name": "System Notifications",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "notification",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 340,
        "wires": []
    },
    {
        "id": "info.monitor",
        "type": "iobinobject",
        "z": "example-iob-inobject-flow",
        "name": "Monitor Info Objects",
        "objectPattern": "*.info.*",
        "outputProperty": "payload",
        "useWildcard": true,
        "outputMode": "individual",
        "server": "config.example",
        "x": 150,
        "y": 420,
        "wires": [["info.debug"]]
    },
    {
        "id": "info.debug",
        "type": "debug",
        "z": "example-iob-inobject-flow",
        "name": "Info Object Changes",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 420,
        "wires": []
    },
    {
        "id": "comment.title",
        "type": "comment",
        "z": "example-iob-inobject-flow",
        "name": "ioBroker Object Subscription Examples",
        "info": "This flow demonstrates various patterns for monitoring ioBroker object changes:\n\n1. **Monitor All Adapters**: Watches for adapter installations, updates, or removals\n2. **Monitor Admin Instances**: Specifically tracks admin adapter instances\n3. **Monitor User Data Objects**: Watches user-created objects and filters for states\n4. **Monitor System Configuration**: Tracks changes to system-wide settings\n5. **Monitor Info Objects**: Watches informational objects across all adapters\n\n**Object Subscription Benefits:**\n- Monitor adapter lifecycle (install/update/remove)\n- Track configuration changes\n- Detect new device discoveries\n- Audit system structure modifications\n- Monitor object updates and deletion\n\n**Wildcard Patterns:**\n- `system.adapter.*` - All adapter objects\n- `system.adapter.admin.*` - All admin adapter objects  \n- `0_userdata.0.*` - All user data objects\n- `*.info.*` - All info objects\n\n**Output Properties:**\n- `msg.topic` - Object ID\n- `msg.payload` - Complete object definition\n- `msg.object` - Same as payload\n- `msg.operation` - Change type (update/delete)\n- `msg.pattern` - Original wildcard pattern (for wildcards)\n- `msg.timestamp` - Change timestamp",
        "x": 200,
        "y": 40,
        "wires": []
    }
]